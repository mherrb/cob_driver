// ----------------------------------------------------------------------
// Neobotix 
// www.neobotix.de
// Copyright (c) 2003. All rights reserved.
// ----------------------------------------------------------------------

// ----------------------------------------------------------------------
// Platform.ini
// Configuration file for neobotix mobile platforms
// ----------------------------------------------------------------------
//
// ----------------------------------------------------------------------
// Configuration of the platform geometry
// ----------------------------------------------------------------------
[Geom]

// Length of the platform in [mm]
PltfLength = 800 //(mit Huelle) //679 (ohne Huelle)

// Width of the platform in [mm]
PltfWidth = 600 //(mit Huelle) //500 (ohne Huelle)

// Distance of the wheels in [mm] // also used in ThreadMotionCtrl->PostProcess (ToDo: get rid of it)
DistWheels = 470

// Distance of the platform center to the wheel axis in [mm]
DistPltfCenterToWheelAxis = 0

// Distance of the wheelS steering axis to the wheel center in [mm]
DistSteerAxisToDriveWheelCenter = 22 // (Neobotix: 18.1)

// Distance of the wheel axis to the front scanner in [mm] in x-direction // has to be replaced by distance between PlatformCenter and Scanner
DistWheelAxisToScanner = 352
// Distance of the Platform center to the front scanner in [mm] in y-direction
ScannerDeltaY = 0
// Angle between the Platform frame an the front scanner in [rad]
ScannerDeltaPhi = 0

// Distance of the wheel axis to the rear scanner in [mm] in negative x-direction
RearScannerDeltaX = -352
// Distance of the Platform center to the front scanner in [mm] in negative y-direction
RearScannerDeltaY = 0
// Angle between the Platform frame an the front scanner in [rad]
RearScannerDeltaPhi = 3.1415926536



// Position of the wheels' steering axis' with respect to the platform center (in robot coordinates) in [mm]
// Wheel1
Wheel1XPos = 235
Wheel1YPos = 185

// Wheel2
Wheel2XPos = -235
Wheel2YPos = 185

// Wheel3
Wheel3XPos = -235
Wheel3YPos = -185

// Wheel4
Wheel4XPos = 235
Wheel4YPos = -185

// Height of the scan plain [mm]
HeightScanPlain = 112

// Radius of the wheels in [mm]
RadiusWheel = 75 


// ----------------------------------------------------------------------
// Constraining Parameters of the implemented motors and drives
// ----------------------------------------------------------------------
[DrivePrms]

// Maximum Rotational Rate for the Drive Wheels [rad/s]
MaxDriveRate = 12.267;

// Maximum Rotational Rate for Steering Motion of the wheels [rad/s]
MaxSteerRate = 24.4;

// Coupling of Steer and Drive Motors of the Wheels (DriveVelo [rad/s] = SteerVelo [rad/s] * couplingRate)
// sign gives direction : -0.5 means if direction of wheel changes by 180° position of drive wheel changes by -90°
Wheel1SteerDriveCoupling = 0.5;
Wheel2SteerDriveCoupling = 0.5;
Wheel3SteerDriveCoupling = 0.5;
Wheel4SteerDriveCoupling = 0.5;

// Orientation of Wheels after beeing homed
// in Degrees (Double-Value)
Wheel1NeutralPosition = -180.0;
Wheel2NeutralPosition = -180.0;
Wheel3NeutralPosition = 0.0;
Wheel4NeutralPosition = 0.0;


// ----------------------------------------------------------------------
// Selection of the hardware components
// ----------------------------------------------------------------------
[Config]

// 1: IOBoard is available, 0: no IOBoard
IOBoard = 0

// 1: USBoard is available. 0: No IO-board
USBoard = 0

// 1: GyroBoard is available, 0: no Gyroboard
GyroBoard = 0

// 1: RadarBoard is available, 0: no Radarboard
RadarBoard = 0

// 1: RelayBoard is available, 0: no Relayboard
RelayBoard = 1
RelayBoardCom = "/dev/ttyUSB0";

//cpc-pk: This is necessary to have configurations like COB3_5 with less wheels
NumberOfMotors = 8;
NumberOfWheels = 4;

// 0: no motor
// 1: motor of the type neo
// 2: motor of the type ham
Wheel1DriveMotor = 2;
Wheel1SteerMotor = 2;
Wheel2DriveMotor = 2;
Wheel2SteerMotor = 2;
Wheel3DriveMotor = 2;
Wheel3SteerMotor = 2;
Wheel4DriveMotor = 2;
Wheel4SteerMotor = 2;



// Buffer length for can communication
GenericBufferLen = 512


// ----------------------------------------------------------------------
// Configuration of the thread cycle times in [s]
// ----------------------------------------------------------------------
[Thread]

ThrMotionCycleTimeS = 0.1 //0.035 //0.03
ThrAppCycleTimeS = 0.3
ThrComGUICycleTimeS = 0.1
ThrComMobileArmCycleTimeS = 0.1
ThrPlannerCycleTimeS = 0.1
ThrLocalizationCycleTimeS = 0.2
ThrUCarrCycleTimeS = 0.02   //0.035
UseThreadSynchronization = true // Use thread synchronization between communication and motion threads.

// true sets the prioritiy of ThreadMotionControl very low. Use only for debugging.
// false: default
LowThreadPriorityEnabled = false



// ----------------------------------------------------------------------
// Miscellaneous parameters
// ----------------------------------------------------------------------
[Misc]

// Watchdog time in [s]. After the watchdog time has expired the velocity is set to zero.
// The watchdog is only active in the velocity mode.
CmdMoveVelWatchdogTimeS = 0.6

// Default configuration of the planning in the automatic mode
DefaultPlanningEnabled = true

// Enables writing measured and commanded values to log file for creating time plots.
LogOfTimePlotEnabled = false

// Enables interpolation from the current position, if the position error is too large.
LostTrackEnabled = true

// Enables stopping, if the position error is too large. In the mode planning an new path will be planed.
StopOnLostTrackEnabled = false




// ----------------------------------------------------------------------
// Log
// ----------------------------------------------------------------------
[Log]

// Logging of the first debug level to the console enabled
LogLevel1ConsoleEnabled = true

// Logging of the first debug level to a file enabled
LogLevel1FileEnabled = false

// Logging of the second debug level to the console enabled
LogLevel2ConsoleEnabled = true

// Logging of the second debug level to a file enabled
LogLevel2FileEnabled = false

// Logging of the user program to the console enabled
LogProgConsoleEnabled = true

// Logging of the user program to a file enabled
LogProgFileEnabled = false

// Logging of localization to the console enabled
LogLocConsoleEnabled = true

// Logging of localization to a file enabled
LogLocFileEnabled = false

// Logging of measured execution and cycle times
LogThreadTimesEnabled = false


// ----------------------------------------------------------------------
// Joystick
// ----------------------------------------------------------------------
[Joystick]

// Define Joystick Type:
// 0: None
// 1: Logitech Rumblepad
// 2: Sony Playstation Controller Dualshock 3 Sixaxis
Type = 1

// Define number of Input Device
// default: 0 = /dev/input/js0
InputDev = 0

// Mapping of longitudinal velocity to the joystick axis
AxisLongVel = 1

// Mapping of lateral velocity to the joystick axis
AxisLatVel = 0

// Mapping of rotation velocity to the joystick axis
AxisRotVel = 2

// Set maximum allowed translational velocity in mm/s
VelTransMax = 500 //250 //520

// Set maximum allowed rotational velocity in rad/s
VelRotMax = 1.0 //0.5 //1.0

// Switch to enable (true) or disable (false) the lowpass of the joystick
LowPassEnabled = true

// Smoothing-Value of Lowpass in seconds
SmoothingVal = 0.15

